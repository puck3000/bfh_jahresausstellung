{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/puck3000/Sites/bfh/site/web/pages/projects/[slug].js\";\nimport client from '../../client';\nimport groq from 'groq';\n\nconst Project = props => {\n  const {\n    title = 'Missing title',\n    atelierName = 'Atelier fehlt'\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Titel: \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Das Projekt \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 22\n      }, this), \" ist Teil des Atelier \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: atelierName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 64\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nconst query = groq`*[_type == \"projekt\" && slug.current == $slug][0]{title, \"atelierName\": atelier->title}`;\n\nProject.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Project;","map":{"version":3,"sources":["/home/puck3000/Sites/bfh/site/web/pages/projects/[slug].js"],"names":["client","groq","Project","props","title","atelierName","query","getInitialProps","context","slug","fetch"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA,KAAK,GAAG,eAAV;AAA2BC,IAAAA,WAAW,GAAG;AAAzC,MAA6DF,KAAnE;AAEA,sBACE;AAAA,4BACE;AAAA,4BAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8CAAe;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,cAAf,yCAAyD;AAAA,kBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CATD;;AAWA,MAAMC,KAAK,GAAGL,IAAM,yFAApB;;AAGAC,OAAO,CAACK,eAAR,GAA0B,gBAAeC,OAAf,EAAwB;AAC9C;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACF,KAA9B;AACA,SAAO,MAAMN,MAAM,CAACU,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,IAAAA;AAAF,GAApB,CAAb;AACD,CAJH;;AAMA,eAAeP,OAAf","sourcesContent":["import client from '../../client'\nimport groq from 'groq'\n\nconst Project = (props) => {\n  const { title = 'Missing title', atelierName = 'Atelier fehlt' } = props\n    \n  return (\n    <article>\n      <h2>Titel: {title}</h2>\n      <p>Das Projekt <span>{title}</span> ist Teil des Atelier <span>{atelierName}</span>.</p>\n    </article>\n  )\n}\n\nconst query = groq `*[_type == \"projekt\" && slug.current == $slug][0]{title, \"atelierName\": atelier->title}`\n\n\nProject.getInitialProps = async function(context) {\n    // It's important to default the slug so that it doesn't return \"undefined\"\n    const { slug = \"\" } = context.query\n    return await client.fetch(query, { slug })\n  }\n\nexport default Project"]},"metadata":{},"sourceType":"module"}