{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/puck3000/Sites/bfh/site/web/pages/projects/[slug].js\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"*[_type == \\\"projekt\\\" && slug.current == $slug][0]\\n    {\\n      title, \\n      \\\"atelierName\\\": atelier->title,\\n      \\\"referencepic\\\": referencepic->image\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport client from '../../client';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nvar Project = function Project(props) {\n  var _props$title = props.title,\n      title = _props$title === void 0 ? 'Missing title' : _props$title,\n      _props$atelierName = props.atelierName,\n      atelierName = _props$atelierName === void 0 ? 'Atelier fehlt' : _props$atelierName,\n      referencepic = props.referencepic;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Titel: \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Das Projekt \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 22\n      }, _this), \" ist Teil des Atelier \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: atelierName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 64\n      }, _this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this), referencepic && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"referencepic:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: urlFor(referencepic).width(50).url()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Project;\nvar query = groq(_templateObject());\n\nProject.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query$slug, slug;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // It's important to default the slug so that it doesn't return \"undefined\"\n            _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n            _context.next = 3;\n            return client.fetch(query, {\n              slug: slug\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/home/puck3000/Sites/bfh/site/web/pages/projects/[slug].js"],"names":["groq","imageUrlBuilder","client","urlFor","source","image","Project","props","title","atelierName","referencepic","width","url","query","getInitialProps","context","slug","fetch"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOH,eAAe,CAACC,MAAD,CAAf,CAAwBG,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA,qBACwDA,KADxD,CACjBC,KADiB;AAAA,MACjBA,KADiB,6BACT,eADS;AAAA,2BACwDD,KADxD,CACQE,WADR;AAAA,MACQA,WADR,mCACsB,eADtB;AAAA,MACuCC,YADvC,GACwDH,KADxD,CACuCG,YADvC;AAGzB,sBACE;AAAA,4BACE;AAAA,4BAAYF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,8CAAe;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,eAAf,yCAAyD;AAAA,kBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,eAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAIIC,YAAY,iBACV;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eAEA;AACE,QAAA,GAAG,EAAEP,MAAM,CAACO,YAAD,CAAN,CACFC,KADE,CACI,EADJ,EAEFC,GAFE;AADP;AAAA;AAAA;AAAA;AAAA,eAFA;AAAA;AAAA;AAAA;AAAA;AAAA,aALN;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAkBD,CArBD;;KAAMN,O;AAuBN,IAAMO,KAAK,GAAGb,IAAH,mBAAX;;AASAM,OAAO,CAACQ,eAAR;AAAA,sEAA0B,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACtB;AADsB,kCAEAA,OAAO,CAACF,KAFR,CAEdG,IAFc,EAEdA,IAFc,oCAEP,EAFO;AAAA;AAAA,mBAGTd,MAAM,CAACe,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,cAAAA,IAAI,EAAJA;AAAF,aAApB,CAHS;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeV,OAAf","sourcesContent":["import groq from 'groq'\nimport imageUrlBuilder from '@sanity/image-url'\nimport client from '../../client'\n\nfunction urlFor (source) {\n  return imageUrlBuilder(client).image(source)\n}\n\nconst Project = (props) => {\n  const { title = 'Missing title', atelierName = 'Atelier fehlt', referencepic } = props\n    \n  return (\n    <article>\n      <h2>Titel: {title}</h2>\n      <p>Das Projekt <span>{title}</span> ist Teil des Atelier <span>{atelierName}</span>.</p>\n      {\n        referencepic && (\n          <div>\n          <h3>referencepic:</h3>\n          <img\n            src={urlFor(referencepic)\n              .width(50)\n              .url()}\n          />\n        </div>\n        )\n      }\n    </article>\n  )\n}\n\nconst query = groq `*[_type == \"projekt\" && slug.current == $slug][0]\n    {\n      title, \n      \"atelierName\": atelier->title,\n      \"referencepic\": referencepic->image\n    }\n  `\n\n\nProject.getInitialProps = async function(context) {\n    // It's important to default the slug so that it doesn't return \"undefined\"\n    const { slug = \"\" } = context.query\n    return await client.fetch(query, { slug })\n  }\n\nexport default Project"]},"metadata":{},"sourceType":"module"}